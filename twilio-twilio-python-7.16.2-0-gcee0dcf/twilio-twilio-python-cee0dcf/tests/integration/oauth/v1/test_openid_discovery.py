# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from tests import IntegrationTestCase
from tests.holodeck import Request
from twilio.base.exceptions import TwilioException
from twilio.http.response import Response


class OpenidDiscoveryTestCase(IntegrationTestCase):

    def test_fetch_request(self):
        self.holodeck.mock(Response(500, ''))

        with self.assertRaises(TwilioException):
            self.client.oauth.v1.openid_discovery().fetch()

        self.holodeck.assert_has_request(Request(
            'get',
            'https://oauth.twilio.com/v1/.well-known/openid-configuration',
        ))

    def test_fetch_response(self):
        self.holodeck.mock(Response(
            200,
            '''
            {
                "issuer": "https://iam.twilio.com",
                "authorization_endpoint": "https://oauth.twilio.com/oauth2/authorize",
                "device_authorization_endpoint": "https://oauth.twilio.com/oauth2/device/authorize",
                "token_endpoint": "https://oauth.twilio.com/oauth2/token",
                "userinfo_endpoint": "https://oauth.twilio.com/oauth2/userinfo",
                "revocation_endpoint": "https://oauth.twilio.com/oauth2/revoke",
                "jwk_uri": "https://oauth.twilio.com/oauth2/certs",
                "response_type_supported": [
                    "code",
                    "token"
                ],
                "subject_type_supported": [
                    "account_sid",
                    "user_sid"
                ],
                "id_token_signing_alg_values_supported": [
                    "ECDSA",
                    "RSA256"
                ],
                "scopes_supported": [
                    "openid",
                    "profile",
                    "email"
                ],
                "claims_supported": [
                    "act",
                    "aud",
                    "cid",
                    "device_id",
                    "exp",
                    "jti",
                    "iat",
                    "iss",
                    "nbf",
                    "scp",
                    "sub"
                ],
                "url": "https://oauth.twilio.com/v1/.well-known/openid-configuration"
            }
            '''
        ))

        actual = self.client.oauth.v1.openid_discovery().fetch()

        self.assertIsNotNone(actual)
